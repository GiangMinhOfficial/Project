@model News
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;
@{
    ViewData["title"] = "Tin tức";
    IPagedList<Evaluation> pagingEvaluations = ViewBag.pagingEvaluations;
    IPagedList<Comment> pagingComments = ViewBag.pagingComments;
    List<News> recentNews = ViewBag.recentNews;
    List<NewsGroup> newsGroups = ViewBag.newsGroups;

    ViewBag.newsId = Model.NewsId;
}

<style>
    a {
        color: black
    }

    .shine {
        color: #fe8c23;
        font-size: 13px;
    }

    .no-shine {
        font-size: 13px;
    }

    .rating-top {
        display: flex;
        width: 35%;
        justify-content: space-between;
    }

        .rating-top .point {
            color: #fe8c23;
            font-weight: bold;
            font-size: 22px;
            line-height: 27px;
            margin-top: 2px;
        }

        .rating-top .rating-total {
            font-size: 13px;
        }

    .rating-list {
        font-size: 10px
    }

        .rating-list li {
            display: flex;
            align-items: baseline;
            /*margin-bottom: 7px;*/
            height: 20px;
        }

            .rating-list li .number-star {
                /*display: inline-flex;
                                                                                                                                                                                                                                                                                                                        align-items: baseline;*/
                margin-right: 5px
            }

            .rating-list li .progress {
                width: 20%;
                height: 5px;
                margin-right: 5px;
            }

            .rating-list li .number-percent {
                font-size: 11px;
                font-weight: bold;
                color: #2f80ed;
            }

    .comment {
        display: flex;
        flex-direction: column
    }

        .comment .comment-top p {
            display: inline-block;
            margin: 0;
            font-weight: bold;
            font-size: 16px
        }

        .comment .comment-content p {
            font-size: 14px;
            margin: 0;
        }

        .comment .comment-click i, span {
            font-size: 14px;
            color: #2f80ed
        }

        .comment .comment-click .reply {
            display: none;
        }

            .comment .comment-click .reply input {
                border: 1px solid lightgray;
                border-radius: 5px
            }

        .comment .comment-click .comment-on-click {
            cursor: pointer
        }

    .comment-btn {
        display: flex;
        justify-content: space-evenly;
    }

        .comment-btn .button {
            cursor: pointer;
            background-color: lightgray;
            padding: 20px 80px;
            border-radius: 5px
        }

            /*.comment-btn .button:hover {
                                                                                                                                                                                                                                        cursor: pointer;
                                                                                                                                                                                                                                        background-color: white;
                                                                                                                                                                                                                                        border: 1px solid lightgray;
                                                                                                                                                                                                                                        padding: 20px 80px;
                                                                                                                                                                                                                                        border-radius: 5px;
                                                                                                                                                                                                                                    }*/

            .comment-btn .button a {
                color: #fff !important;
            }
</style>
<style>
    .popup {
        background: rgba(0,0,0,0.2);
        width: 100%;
        height: 100vh;
        position: fixed;
        top: 0;
        display: flex;
        justify-content: center;
        align-items: center
    }

    .popup-content {
        height: 520px;
        width: 500px;
        background: #fff;
        padding: 20px;
        margin-top: 20px;
        border-radius: 5px;
        position: relative
    }

    .popup .popup-content .popup-top {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .popup .popup-content .popup-top p {
            margin: 0;
        }

        .popup .popup-content .popup-top .close-btn {
            border: 1px solid #eceff8;
            padding: 6px;
            border-radius: 5px
        }

    .box-cmt-popup .info-pro {
        display: flex;
        justify-content: space-between;
        align-items: baseline
    }

    .info-pro .img-cmt img {
        max-width: 60px
    }

    .box-cmt-popup .select-star ul {
        display: flex;
        justify-content: space-evenly;
        margin-top: 20px
    }

        .box-cmt-popup .select-star ul li {
            width: 50px;
            text-align: center;
        }

    .box-cmt-popup form textarea {
        background-color: #fff;
        border-radius: 4px 4px 0 0;
        resize: none;
        border: 1px solid #bdbdbd;
        color: #323232;
        padding: 10px;
        width: 100%;
        font-size: 14px
    }

    form .list-input {
        display: flex;
        justify-content: space-between;
    }

        form .list-input input {
            width: 47%;
            border-radius: 4px;
            border: 1px solid #bdbdbd;
            height: 40px;
            padding: 10px;
            font-size: 14px;
        }

    form #evaluateBtn {
        background-color: #2f80ed;
        border: 0;
        border-radius: 4px;
        color: #fff;
        cursor: pointer;
        display: block;
        margin: 0 auto;
        padding: 11px 10px;
        width: 215px;
        text-align: center;
        margin-top: 10px;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>

<!--================Blog Area =================-->
<section class="blog_area single-post-area section-padding">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 posts-list">
                <div class="single-post">
                    @Html.Raw(ViewData["content"])
                </div>
                <div class="rating">
                    <hr />
                    <p>Đánh giá <b>@Model.NewsTitle</b></p>
                    <div class="rating-top">
                        <p class="point">
                            @{
                                double number = (double)ViewData["ratingTotal"];
                                string ratingTotal = number.ToString("0.0").Replace(',', '.');
                            }
                            @ratingTotal
                        </p>
                        <div class="list-star">
                            <i class="fas fa-star @(number >= 0.5 ? "shine" : "no-shine")"></i>
                            <i class="fas fa-star @(number >= 1.5 ? "shine" : "no-shine")"></i>
                            <i class="fas fa-star @(number >= 2.5 ? "shine" : "no-shine")"></i>
                            <i class="fas fa-star @(number >= 3.5 ? "shine" : "no-shine")"></i>
                            <i class="fas fa-star @(number >= 4.5 ? "shine" : "no-shine")"></i>
                        </div>
                        <p class="rating-total">@(ViewBag.evaluations == null ? 0 : ViewBag.evaluations.Count) đánh giá</p>
                    </div>
                    <ul class="rating-list">
                        <li>
                            <div class="number-star">
                                5
                                <i class="fas fa-star"></i>
                            </div>
                            <div class="progress">
                                <div class="progress-bar bg-warning" role="progressbar" style="width:@ViewData["fiveStarPercent"]%;"
                                     aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <p class="number-percent">@ViewData["fiveStarPercent"]%</p>
                        </li>
                        <li>
                            <div class="number-star">
                                4
                                <i class="fas fa-star"></i>
                            </div>
                            <div class="progress">
                                <div class="progress-bar bg-warning" role="progressbar" style="width: @ViewData["fourStarPercent"]%;"
                                     aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <p class="number-percent">@ViewData["fourStarPercent"]%</p>
                        </li>
                        <li>
                            <div class="number-star">
                                3
                                <i class="fas fa-star"></i>
                            </div>
                            <div class="progress">
                                <div class="progress-bar bg-warning" role="progressbar" style="width: @ViewData["threeStarPercent"]%;"
                                     aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <p class="number-percent">@ViewData["threeStarPercent"]%</p>
                        </li>
                        <li>
                            <div class="number-star">
                                2
                                <i class="fas fa-star"></i>
                            </div>
                            <div class="progress">
                                <div class="progress-bar bg-warning" role="progressbar" style="width: @ViewData["twoStarPercent"]%;"
                                     aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <p class="number-percent">@ViewData["twoStarPercent"]%</p>
                        </li>
                        <li>
                            <div class="number-star">
                                1
                                <i class="fas fa-star"></i>
                            </div>
                            <div class="progress">
                                <div class="progress-bar bg-warning" role="progressbar" style="width: @ViewData["oneStarPercent"]%;"
                                     aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <p class="number-percent">@ViewData["oneStarPercent"]%</p>
                        </li>
                    </ul>
                </div>

                <hr />


                <div class="mb-5">
                    <div id="your-partial-view-container">
                        @{
                            Html.RenderPartial("_EvaluationPagedDataPartial", pagingEvaluations);
                        }
                    </div>

                </div>

                <div class="comment-btn">
                    <a>
                        <div class="button" onclick="openPopup()">

                            <i class="far fa-star"></i>
                            <span>Viết đánh giá</span>

                        </div>
                    </a>

                    <div class="button">
                        <a>
                            <span>Xem @(ViewBag.evaluations == null ? 0 : ViewBag.evaluations.Count) đánh giá</span>
                        </a>
                    </div>
                </div>

                <div class="comments-area" id="cmt-area">
                    <div class="mt-3">
                        <div id="comment-partial-view-container">
                            @{
                                Html.RenderPartial("~/Views/Comment/_CommentPagedDataPartial.cshtml", pagingComments);
                            }
                        </div>

                    </div>
                </div>

                <div class="comment-form">
                    <h4>Leave a Reply</h4>
                    <form class="form-contact comment_form" asp-controller="Comment" asp-action="CreateComment" asp-route-newsId="@Model.NewsId">
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <textarea class="form-control w-100" name="content" id="comment" cols="30" rows="9" required
                                              placeholder="Write Comment"></textarea>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <input class="form-control" name="customerName" id="name" type="text" placeholder="Name" required>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <input class="form-control" name="email" id="email" type="email" placeholder="Email" required>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="button button-contactForm btn_1 boxed-btn">Send Message</button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="blog_right_sidebar">
                    <aside class="single_sidebar_widget search_widget">
                        <form asp-action="List">
                            <div class="form-group">
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control" placeholder='Search Keyword'
                                           onfocus="this.placeholder = ''" onblur="this.placeholder = 'Search Keyword'"
                                           name="search">
                                    <div class="input-group-append">
                                        <button class="btns" type="button"><i class="ti-search"></i></button>
                                    </div>
                                </div>
                            </div>
                            <button class="button rounded-0 primary-bg text-white w-100 btn_1 boxed-btn"
                                    type="submit">
                                Search
                            </button>
                        </form>
                    </aside>


                    @{
                        //Group Of News
                        Html.RenderPartial("~/Views/NewsGroup/_GroupOfNewsPartial.cshtml", newsGroups);

                        //Recent News
                        Html.RenderPartial("_RecentNewsPartial", recentNews);
                    }

                </div>
            </div>
        </div>
    </div>
</section>
<!--================ Blog Area end =================-->
<!-- Evaluation Popup -->
@Html.Partial("_EvaluatePopupPartial", Model);
<!-- End of Evaluation Popup -->

<script>
    //function reply(evaluationId) {
    //    var rep = document.getElementById("eval_" + evaluationId).style.display = "block";
    //}

    

    function selectStar(value) {
        // remove all shining stars when user rechoose star rate
        removeAllShineStars();
        for (let i = 1; i <= value; i++) {
            var iTag = document.getElementById('cmt_' + i);
            iTag.classList.add("shine");
        }
        document.getElementById('rateRetriever').value = value;
    }

    function removeAllShineStars() {
        for (let i = 1; i <= 5; i++) {
            var iTag = document.getElementById('cmt_' + i);
            iTag.classList.remove("shine");
        }
    }


</script>

<script src="~/assets/js/custom/modal.js"></script>


@*<script type="text/javascript">
    var frm = $('#evalForm');
    frm.submit(function (e) {
        e.preventDefault();

        $.ajax({
            //type: frm.attr('method'),
            //url: frm.attr('action'),
            type: frm.attr('method'),
            url: frm.attr('action'),
            data: frm.serialize(),
            dataType: "text",
            success: function (data) {
                var ret = JSON.parse(data);

                // Create the outermost div with class "comment"
                const commentDiv = document.createElement('div');
                commentDiv.className = 'comment';

                // Create the HTML structure using template literals and chaining
                commentDiv.innerHTML = `
                                                                                <div class="comment-top">
                                                                                        <p>${ret[0].UserName}</p>
                                                                                </div>
                                                                                <div class="comment-rate">
                                                                                            ${Array.from({ length: 5 }, (_, i) => `<i class="fas fa-star ${ret[0].Rating >= i + 1 ? 'shine' : 'no-shine'}"></i>`).join('')}
                                                                                </div>
                                                                                <div class="comment-content">
                                                                                            <p>${ret[0].Content}</p>
                                                                                </div>
                                                                                <div class="comment-click">
                                                                                        <div class="comment-on-click" data-evaluation-id="${ret[0].EvaluationId}">
                                                                                        <i class="far fa-comment"></i>
                                                                                        <span>Thảo luận</span>
                                                                                    </div>
                                                                                        <div class="reply" id="eval_${ret[0].EvaluationId}">
                                                                                        <input type="text" placeholder="Nhập thảo luận của bạn">
                                                                                        <a href="">GỬI</a>
                                                                                    </div>
                                                                                </div>
                                                                                <hr />
                                                                            `;

                // Add event listener using event delegation
                commentDiv.addEventListener('click', function (event) {
                    if (event.target.classList.contains('comment-on-click')) {
                        const evaluationId = event.target.getAttribute('data-evaluation-id');
                        reply(evaluationId);
                    }
                });

                // Add the commentListDiv to the body or any other element on the page
                document.getElementById('eval-area').appendChild(commentDiv);
            },
            error: function (data) {
                console.log('An error occurred.');
                console.log(data);
            },
        });
    });
</script>*@

